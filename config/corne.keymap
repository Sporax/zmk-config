 /*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
// include <dt-bindings/zmk/hid_usage.h>
// include <dt-bindings/zmk/hid_usage_pages.h>


// layer shortcuts (note: zmk only allows you to access higher index layers from any given layer)

#define DEF  0
#define MAC  1
#define GAMING 2
#define LWR  3
#define RSE  4
#define M_RSE 5
#define XL  6  // switch layer


// navigation shortcuts

#define ZCTRL  &mt LCTRL Z
#define SCTRL  &mt RCTRL FSLH
// back / forward a word
#define LWRD  &kp LC(LA(LEFT))
#define RWRD  &kp LC(LA(RIGHT))
// previous / next tab
#define TABP  &kp LC(LS(TAB))  // ctrl + shift + tab
#define TABN  &kp LC(TAB)      // ctrl + tab
// mac specific shortcuts
#define M_HOME  &kp LC(A)     // Ctrl+A, Ctrl+E globally works in Mac for start / end of line (including terminal / chrome / etc).
#define M_END  &kp LC(E)
#define LWRD_M  &kp RA(LEFT)  // Mac uses Alt+Left instead of Ctrl+Left to skip words with the cursor.
#define RWRD_M  &kp RA(RIGHT)
#define SPC_P  &kp RC(LEFT)  // Next / previous space (ctrl+left/right must be set in preferences>keyboard shortcuts).
#define SPC_N  &kp RC(RIGHT)

// mac mission control (0xc1)
// ref: https://github.com/qmk/qmk_firmware/blob/d6bfbdb6b15967e649b54e9cea6643a8dc48ba0b/data/constants/keycodes/keycodes_0.0.2_basic.hjson#L8
// - define ZMK_HID_USAGE(page, id) ((page << 16) | id)
// - define HID_USAGE_KEY (0x07)            // Keyboard/Keypad
// - define HID_USAGE_KEY_KEYPAD_F (0xC1)

// -define MSCTL (ZMK_HID_USAGE(HID_USAGE_KEY, HID_USAGE_KEY_KEYPAD_F))
#define MSCTL &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "DEF";
// (0)
// ,-----------------------------------------------------------------------------------.
// | Tab  |   Q  |   W  |   E  |   R  |   T  |   Y  |   U  |   I  |   O  |   P  | Bksp |
// |------+------+------+------+------+------+------+------+------+------+------+------|
// | Esc  |   A  |   S  |   D  |   F  |   G  |   H  |   J  |   K  |   L  |   ;  |  Ent |
// |------+------+------+------+------+------+------+------+------+------+------+------|
// | Shift|Z/ctrl|   X  |   C  |   V  |   B  |   N  |   M  |   ,  |   .  | /ctrl| Shift|
// |------+------+------+------+------+------+------+------+------+------+------+------|
// |                    | Alt  | Lower|  Win |  Spc | Raise| Alt  |                    |
// `-----------------------------------------------------------------------------------'
                        bindings = <
   &kp TAB    &kp Q    &kp W    &kp E     &kp R    &kp T     &kp Y      &kp U    &kp I      &kp O    &kp P     &kp BSPC
   &gresc     &kp A    &kp S    &kp D     &kp F    &kp G     &kp H      &kp J    &kp K      &kp L    &kp SEMI  &kp RET
   &kp LSHFT  ZCTRL    &kp X    &kp C     &kp V    &kp B     &kp N      &kp M    &kp COMMA  &kp DOT  SCTRL     &kp RSHFT
                                &kp LALT  &mo LWR  &kp LGUI  &kp SPACE  &mo RSE  &kp RALT
                        >;
                };
// -----------------------------------------------------------------------------------------
                mac_layer {
                        label = "MAC";

// (1): cmd instead of win; mac_raise instead of raise
// ,-----------------------------------------------------------------------------------.
// | Tab  |   Q  |   W  |   E  |   R  |   T  |   Y  |   U  |   I  |   O  |   P  | Bksp |
// |------+------+------+------+------+------+------+------+------+------+------+------|
// | Esc  |   A  |   S  |   D  |   F  |   G  |   H  |   J  |   K  |   L  |   ;  |  Ent |
// |------+------+------+------+------+------+------+------+------+------+------+------|
// | Shift| Zctrl|   X  |   C  |   V  |   B  |   N  |   M  |   ,  |   .  | /ctrl| Shift|
// |------+------+------+------+------+------+------+------+------+------+------+------|
// |                    | Alt  | Lower| Cmd  |  Spc | Raise| Alt  |                    |
// `-----------------------------------------------------------------------------------'
                        bindings = <
   &kp TAB    &kp Q    &kp W    &kp E     &kp R    &kp T     &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BSPC
   &gresc     &kp A    &kp S    &kp D     &kp F    &kp G     &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp RET
   &kp LSHFT  ZCTRL    &kp X    &kp C     &kp V    &kp B     &kp N      &kp M      &kp COMMA  &kp DOT  SCTRL     &kp RSHFT
                                &kp LALT  &mo LWR  &kp LGUI  &kp SPACE  &mo M_RSE  &kp RALT
                        >;
                };
// -----------------------------------------------------------------------------------------
                gaming_layer {
                        label = "GAMING";

// (2): same as default except convert left Win to Space (left hand jump key)
// ,-----------------------------------------------------------------------------------.
// |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |
// |------+------+------+------+------+------+------+------+------+------+------+------|
// |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |
// |------+------+------+------+------+------+------+------+------+------+------+------|
// |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |
// |------+------+------+------+------+------+------+------+------+------+------+------|
// |                    |  __  |  __  |  Spc |  __  |  __  |  __  |                    |
// `-----------------------------------------------------------------------------------'
                        bindings = <
   &kp TAB    &kp Q    &kp W    &kp E     &kp R    &kp T     &kp Y      &kp U    &kp I      &kp O    &kp P     &kp BSPC
   &gresc     &kp A    &kp S    &kp D     &kp F    &kp G     &kp H      &kp J    &kp K      &kp L    &kp SEMI  &kp RET
   &kp LSHFT  ZCTRL    &kp X    &kp C     &kp V    &kp B     &kp N      &kp M    &kp COMMA  &kp DOT  SCTRL     &kp RSHFT
                                &kp LALT  &mo LWR  &kp SPACE &kp SPACE  &mo RSE  &kp RALT
                        >;
                };
// -----------------------------------------------------------------------------------------
                lower_layer {
                        label = "LWR";
// (3)
// ,-----------------------------------------------------------------------------------.
// | Tab  |   1  |   2  |   3  |   4  |   5  |   6  |   7  |   8  |   9  |   0  | Bksp |
// |------+------+------+------+------+------+------+------+------+------+------+------|
// | Esc  |   !  |   @  |   #  |   $  |   %  |   ^  |   (  |   {  |   [  |   [  | Enter|
// |------+------+------+------+------+------+------+------+------+------+------+------|
// | Shift|   `  |   ^  |   &  |   *  |   \  |   -  |   )  |   }  |   ]  |   ]  | Shift|
// |------+------+------+------+------+------+------+------+------+------+------+------|
// |                    | Alt  |  __  |      |      | Caps | Alt  |                    |
// `-----------------------------------------------------------------------------------'
                        bindings = <
   &kp TAB    &kp N1     &kp N2     &kp N3    &kp N4     &kp N5     &kp N6     &kp N7     &kp N8    &kp N9    &kp N0    &kp BSPC
   &gresc     &kp EXCL   &kp AT     &kp HASH  &kp DLLR   &kp PRCNT  &kp CARET  &kp APOS   &kp LPAR  &kp LBRC  &kp LBKT  &kp RET
   &kp LSHFT  &kp GRAVE  &kp CARET  &kp AMPS  &kp ASTRK  &kp BSLH   &kp MINUS  &kp EQUAL  &kp RPAR  &kp RBRC  &kp RBKT  &kp RSHFT
                                    &kp LALT  &trans     &trans     &trans     &kp CAPS   &kp RALT
                        >;
                };
// -----------------------------------------------------------------------------------------
                raise_layer {
                        label = "RSE";
// (4)
// ,-----------------------------------------------------------------------------------.
// |  Tab | Home | Pg.Up|  Up  |Pg.Dwn|      |SWITCH|      |M.Prev|PlayPa|M.Next| Bksp |
// |------+------+------+------+------+------+------+------+------+------+------+------|
// |  Esc | End  | Left | Down | Right|      |      | TabN | TabP | VolUp| BriUp|  Del |
// |------+------+------+------+------+------+------+------+------+------+------+------|
// | Shift|      | WordL|      | WordR|      |      |      |      | VolDn| BriDn| Shift|
// |------+------+------+------+------+------+------+------+------+------+------+------|
// |                    | Alt  |      |      |      |  __  | Alt  |                    |
// `-----------------------------------------------------------------------------------'
                        bindings = <
   &kp TAB    &kp HOME  &kp PG_UP  &kp UP    &kp PG_DN  &none    &to XL  &none   &kp C_PREV  &kp C_PP      &kp C_NEXT    &kp BSPC
   &gresc     &kp END   &kp LEFT   &kp DOWN  &kp RIGHT  &none    &none   TABP    TABN        &kp C_VOL_UP  &kp C_BRI_UP  &kp DEL
   &kp LSHFT  &none     LWRD       &none     RWRD       &none    &none   &none   &none       &kp C_VOL_DN  &kp C_BRI_DN  &kp RSHFT
                                   &kp LALT  &none      &trans   &trans  &trans  &kp RALT
                        >;
                };
// -----------------------------------------------------------------------------------------
                mac_raise_layer {
                        label = "M_RSE";

// (5): raise with mac specific key codes
// ,-----------------------------------------------------------------------------------.
// |  Tab | Home | Pg.Up|  Up  |Pg.Dwn|      |SWITCH|      |M.Prev|PlayPa|M.Next| Bksp |
// |------+------+------+------+------+------+------+------+------+------+------+------|
// |  Esc | End  | Left | Down | Right|      |      | TabN | TabP | VolUp| BriUp|  Del |
// |------+------+------+------+------+------+------+------+------+------+------+------|
// | Shift|      | WordL|      | WordR|      |MisCtl|SpaceN|SpaceP| VolDn| BriDn| Shift|
// |------+------+------+------+------+------+------+------+------+------+------+------|
// |                    | Alt  |      |  Cmd |  Spc |  __  | Alt  |                    |
// `-----------------------------------------------------------------------------------'
                        bindings = <
   &kp TAB    M_HOME   &kp PG_UP  &kp UP    &kp PG_DN  &none    &to XL     &none   &kp C_PREV  &kp C_PP      &kp C_NEXT    &kp BSPC
   &gresc     M_END    &kp LEFT   &kp DOWN  &kp RIGHT  &none    &none      TABP    TABN        &kp C_VOL_UP  &kp C_BRI_UP  &kp DEL
   &kp LSHFT  &none    LWRD_M     &none     RWRD_M     &none    MSCTL      SPC_P   SPC_N       &kp C_VOL_DN  &kp C_BRI_DN  &kp RSHFT
                                  &kp LALT  &none      &trans   &trans     &trans  &kp RALT
                        >;
                };
// -----------------------------------------------------------------------------------------
                switch_layer {
                        label = "XL";

// (6): select mac / win / linux i3 / gaming modes
// ,------------------------------------------------------------------------------------.
// |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |K.SLEEP|  __  |
// |------+------+------+------+------+------+------+------+------+------+-------+------|
// |  __  |  Mac |  Win |  i3  |  __  |Gaming|  __  |  __  |  __  |  __  |  __   |  __  |
// |------+------+------+------+------+------+------+------+------+------+-------+------|
// |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __  |  __   |  __  |
// |------+------+------+------+------+------+------+------+------+------+-------+------|
// |                    |  __  |  __  | Reset|  __  |  __  |  __  |                     |
// `------------------------------------------------------------------------------------'
                        bindings = <
   &none    &tog XL   &none     &none   &none   &none       &none   &none   &none   &none   &kp K_SLEEP  &none
   &tog XL  &to MAC   &to DEF   &none   &none   &to GAMING  &none   &none   &none   &none   &none        &none
   &none    &none     &none     &none   &none   &none       &none   &none   &none   &none   &none        &none
                                &none   &none   &sys_reset  &none   &none   &none
                        >;
                };
        };
};